<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"  
	xmlns:mvc="http://www.springframework.org/schema/mvc"  
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

	<!-- 默认的注解映射的支持 -->
    <mvc:annotation-driven />
    
    <!-- 自动扫描的包名 -->
    <context:component-scan base-package="com" use-default-filters="false">
    	<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    
    <!-- 视图解释类 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">

    	<!-- <property name="prefix" value="/WEB-INF/jsp/"/> -->
        <property name="prefix" value="/jsp/"/>

    	<property name="suffix" value=".jsp"/><!--可为空,方便实现自已的依据扩展名来选择视图解释类的逻辑  -->
    	<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
    </bean>
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
<!--     	<property name="maxUploadSize" value="5242880" />	  									    -->
	</bean>
 	<!-- 对静态资源文件的访问  方案一 （二选一） -->
 	<mvc:default-servlet-handler/>
 	
 	<!-- 对静态资源文件的访问  方案二 （二选一）-->
	<mvc:resources mapping="/images/**" location="/images/" cache-period="31556926"/>
	<mvc:resources mapping="/js/**" location="/js/" cache-period="31556926"/>
	<mvc:resources mapping="/css/**" location="/css/" cache-period="31556926"/>
<!--     定义拦截器	   
	<mvc:interceptors> 
        <bean class="com.maimai.interceptor.LoggedInterceptor"></bean> 
    </mvc:interceptors>
      -->
      
       <mvc:interceptors> 
	    <!-- 定义拦截器 -->
	     <mvc:interceptor>   
	        <!-- 匹配的是url路径， 如果不配置或/**,将拦截所有的Controller --> 
	        <mvc:mapping path="/signFileUpload.do" />  
	        <!-- 不需要拦截的地址 -->
	        <bean class="com.mmec.business.FileUploadInterceptor"></bean>   
	    </mvc:interceptor> 
	     </mvc:interceptors>
</beans> 
